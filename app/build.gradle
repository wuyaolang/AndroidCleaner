plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.cooling.artifact"
        minSdkVersion 21
        targetSdkVersion 30
//        versionCode 1
//        versionName "1.0.0"
        versionCode 9999
        versionName "9999"
        flavorDimensions "versionCode"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                THEONTHE_BASE_URL         : "key=http://api.open.flytutu.cn/",
                THEOTHE_VEST_ID           : "key=27b0cb55-6f5d-414c-9771-2d1086c70ade",
                THEOTHE_PRODUCT_ID        : "key=67fc6300-ff85-4483-bc34-37b4fbf0eb4b",
                THEOTHE_PLATFROM_PUBLICKEY: "key=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC/cWilCBYKnh615Xhh1EckmqRZTo5humby4MLSYjYWVOj5jnNFt/LOCd2rFtvOoVG4A3xbikiFyVYxg6gTukidLF5yeMUrUyIMDK1LZ32bAOmSs0Ls+FjPpR4J55tv29NS3kPTa35uvywN+CYAcP6XDbK3mrnkMo3xLVNgxjCXVwIDAQAB",
                THEOTHE_APP_SECRETSALT    : "key=MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAKL4lkYKWHKx/pawHs8obpn2a1HuvuNCkiHAMri1MbWbf2Mm7RP+677opcPoyo/BhR01mzg0/qqwYkoognNWuGNakcI0LfQAmDbly185W/ERnSM829AXAzUNw3evmLjKnffTjFUOSiTPF+ITQg0zRnmVHttRGkql3yZU4/T6SoevAgMBAAECgYEAhiXNvNWjPLYbdHqAwdDsSbu3V3gIlRUlKLcGiVhNFMpsr3dJS15ZO4pReNPUeUS4h/SqUjf9MQ+DuLtjtgE6QO209HvUBKoO3TbjcfgnmSJNA7nl39lyhrrlK+mTT4lMSU+ZbD6qs7XXB6u6Z+wk/d4DHNf3dPc1NHwNihf1HyECQQDUWs0ksozjOdoXS7aVw0pgbNMEz3VPiZPtnXBfYrHN6LWCdiD0f3LJxEVQDd7GDsxL5FkuM8Cf7WkaRta2OqDnAkEAxHdttLyJeL/7CpLJ2ZBjTBcWEqpLijf15GdBlZf/UMeovm3CK7JeRRfLBwQ3NALUw4PcKZ5k0y+OKrASLT/h+QJBAIESN8JobE3oafDi6jWZH+n/+zrfRfR0MN+qZBT2DhCTs096sYkqtgCBNYf1BkTn1bEDOFlmx1vtl4aLLBJTDF0CQBvIl+cbUoWVALd6ErmFxcUY7rItCwm86DUotQmmuSB/W8myU+dCDjrPJpMTcYsVa2lK2HO6Rp/m9b/rrmZfxmECQQDL88jK9B99mqFbL5d+PFDtd5r0xzfmQjbsYPEXc+HL1iKgqmAMDxJVSuhtVuuYpl/A9PhqwvwRwMVEh5q7cicr",
                CHANNEL_VALUE             : "test13"
        ]
    }

    signingConfigs {
        release {
            storeFile file('../cleaner13.jks')
            storePassword "ddmh2021"
            keyAlias "cleaner"
            keyPassword "ddmh2021"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }

    productFlavors {

        automatic_cqjwsq {
            manifestPlaceholders = [FROM_RECENTS : true,
                                    CHANNEL_VALUE: "test13"]
            resValue "string", "app_name", "超强降温神器"
            resValue "string", "automatic_cqjwsq_build_channels", "test13,vivo13,xiaomi13,huawei13,qq13,oppo13"
        }

        automatic_cqjwjl {
            manifestPlaceholders = [FROM_RECENTS : true,
                                    CHANNEL_VALUE: "test13"]
            resValue "string", "app_name", "超强极速降温精灵"
            resValue "string", "automatic_cqjwjl_build_channels", "test13,vivo13,xiaomi13,huawei13,qq13,oppo13"
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            variant.productFlavors.each { flavor ->
                def project = variant.applicationId
                def separator = "_"
                def buildType = variant.buildType.name
                def apkName = project + separator + "v" + variant.versionName + separator + buildType + separator + flavor.name + ".apk"
                if (buildType == "release") {
                    apkName = project + separator + "v" + variant.versionName + separator + buildType + separator + flavor.name + ".apk"
                }

                output.outputFileName = apkName
            }
        }
    }

    project.afterEvaluate {
        getProductFlavors().each { flavor ->
            println("!!!!!!!!!! it:" + flavor.name + "==>it.getPath:" + "${rootProject.projectDir.path}/icons/${flavor.name}/")
            task "${flavor.name}"(type: Copy) {
                from "${rootProject.projectDir.path}/icons/${flavor.name}/" into 'src/main/res/'
            }
        }
        /*:app:preAlibabaReleaseBuild*/
        /*:app:prepareReleaseDependencies*/
        tasks.matching {
            it.name.startsWith('pre') && (it.name.endsWith('ReleaseBuild'))
        }.each { t ->
            def what = t.name.substring(3, t.name.indexOf("Release")).toLowerCase()
            println("XXXXXXXXXXXXXXwhat:" + what)
            t.dependsOn(what)
        }
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // RxJava3，https://github.com/ReactiveX/RxJava
    implementation "io.reactivex.rxjava3:rxjava:3.0.13"
    // RxAndroid，https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    // MMKV 高性能通用 key-value 组件，https://github.com/Tencent/MMKV
    implementation 'com.tencent:mmkv-static:1.2.10'
    // 请求权限辅助，https://github.com/guolindev/PermissionX
    implementation 'com.permissionx.guolindev:permissionx:1.4.0'
    // RecyclerViewAdapter，https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.6'
    // 今日头条的屏幕适配，https://github.com/JessYanCoding/AndroidAutoSize
    implementation 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'
    // 基于的 Android WebView，https://github.com/Justson/AgentWeb
    implementation 'com.github.Justson.AgentWeb:agentweb-core:v4.1.9-androidx'
    // Lottie，https://github.com/airbnb/lottie-android
    implementation 'com.airbnb.android:lottie:3.7.0'
    // 状态栏，https://github.com/yangchong211/YCStatusBar
    implementation 'cn.yc:YCStatusBarLib:1.4.3'
    // Glide，https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // 友盟统计
    implementation 'com.umeng.umsdk:common:9.4.0'
    implementation 'com.umeng.umsdk:asms:1.2.3'
    // 友盟错误分析
    implementation 'com.umeng.umsdk:apm:1.3.1'

    // 公共服务平台
    implementation files('libs/oaid_sdk_1.0.23.aar')
    dependencies {
        implementation('com.thieonesdk.lib:theone-commonsdk:1.7.1.58-beta@aar') {
            transitive = true //SDK中pom文件下的依赖需要引进来
        }
    }
    // 第三方所需
    implementation files('libs/android-query-full.0.26.7.jar')
    // 快手
    implementation files('libs/kssdk-ad-3.3.9.aar')
    implementation files('libs/ks_adapter_3.3.9.1.aar')
    // 广点通
    implementation files('libs/GDTSDK.unionNormal.4.351.1221.aar')
    implementation files('libs/gdt_adapter_4.351.1221.2.aar')
    // 穿山甲
    implementation files('libs/open_ad_sdk_3.6.1.3.aar')
    implementation files('libs/mediation_ad_sdk_2.8.0.0.aar')
    // 聚合广告 支持穿山甲M
    implementation('com.thieonesdk.lib:theone-comadsdk-csjm:2.2.8-beta')
}